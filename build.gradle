import java.time.Instant

plugins {
    id("base")
    id("fabric-loom").version("1.7.2")
    id("maven-publish")
}

def project_name = project.project_name
def java_version = project.java_version
def plugin_version = project.plugin_version
def mappings_version = project.mappings_version
def minecraft_version = project.minecraft_version

base { archivesName = project_name }

configurations {
    rusherhackApi
    compileOnly.extendsFrom(rusherhackApi)
}

repositories {
    maven { name = "ParchmentMC"
        url = "https://maven.parchmentmc.org" }
    maven { name = "rusherhack"
        url = "https://maven.rusherhack.org/releases" } //snapshots
}

dependencies {
    implementation('org.reflections:reflections:0.9.12')
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-1.21:${mappings_version}@zip")
    }
    rusherhackApi("org.rusherhack:rusherhack-api:${minecraft_version}-SNAPSHOT")
}

loom {
    for (file in zipTree(this.project.configurations.rusherhackApi.singleFile)) {
        if (file.name == "rusherhack.accesswidener") accessWidenerPath = file }
}

java {
    def currentVersion = JavaVersion.current().getMajorVersion()
    def requiredVersion = JavaVersion.toVersion(java_version).getMajorVersion()
    if (currentVersion != requiredVersion)
        print("Project calls for Java ${java_version} but you are on ${currentVersion}!\n")
    toolchain.languageVersion = JavaLanguageVersion.of(java_version)
}

processResources {
    filesMatching("rusherhack-plugin.json") {
        it.expand(plugin_version: plugin_version, minecraft_version: minecraft_version) }
}

jar.manifest.attributes(
        "Minecraft-Version": minecraft_version,
        "Build-Timestamp": Instant.now().toString()
)